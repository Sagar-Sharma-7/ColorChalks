Metadata-Version: 2.1
Name: ColorChalks
Version: 1.0.3
Summary: You can use different foreground and background colors in terminal using ColorChalks module.
Home-page: https://github.com/Sagar-Sharma-7/ColorChalks
Author: Sagar-Sharma-7
Author-email: 6969sagarsharma@gmail.com
Project-URL: Bug Tracker, https://github.com/Sagar-Sharma-7/ColorChalks/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

<h1 align="center">
	<img  src="./src/img/Color2.png" alt="ColorChalks">
</h1>

> üñåÔ∏èModule for terminal string styling

[![PyPI version](https://badge.fury.io/py/ColorChalks.svg)](https://badge.fury.io/py/ColorChalks)
[![made-with-python](https://img.shields.io/badge/Made%20with-Python-1f425f.svg)](https://www.python.org/)
[![PyPI license](https://img.shields.io/pypi/l/ansicolortags.svg)](https://pypi.python.org/pypi/ansicolortags/)
[![Downloads](https://static.pepy.tech/personalized-badge/colorchalks?period=total&units=international_system&left_color=black&right_color=brightgreen&left_text=Downloads)](https://pepy.tech/project/colorchalks)
---

<br>

## Installation
```sh
pip install ColorChalks
```

## Usage       
```python 
from ColorChalks import ColorChalks

# Print "Hello World!" in yellow color.
print(ColorChalks.FCOLORS.Yellow + "Hello World!")

# Print "Hello World!" with green background color. 
# but first you have to reset

print(COLORS.Reset + BCOLORS.Green + "Hello World!")

## Print "Hello World!" with green background color with blue foreground color
print(COLORS.Reset + BCOLORS.Green + FCOLORS.Blue + "Hello World!")
```
**Note:** Version 1.0.3 comes with foreground colors (FCOLORS) and background colors (BCOLORS)

-----

## Colors 
- `Black`
- `Red`
- `Green`
- `Yellow`
- `Blue`
- `Magenta`
- `Cyan`
- `White`
- `BrightBlack`
- `BrightRed`
- `BrightGreen`
- `BrightYellow`
- `BrightBlue`
- `BrightMagenta`
- `BrightCyan`
- `BrightWhite`

**NOTE:** Use the following command to reset to default color. Prefer to use this command before jumping from Bright colors to normal colors.
```python
print(ColorChalks.COLORS.Reset) 
```
